<?php
class ChartController
{
    /**
     * @route("GET /engagement/@semaine")
     */
    public function engagement($f3, $params)
    {
        try {
            $semaine = $params['semaine'];
            $semaineNumber = explode("-", $semaine)[1]; // recup no semaine format YYYY-WW

            $total_articles = $this->getTotalMachines($semaine);
            //$total_pondere = round($this->getTotalMachinesPonderee($semaine),1);

            $data = [
                [
                    'name' => 'Réalisés',
                    'data' => []
                ],
            ];

            $annotations = [];

            $this->vue_engagement->total = null;
            $result = $this->vue_engagement->find(['engagement=?', "$semaine"]);

            foreach ($result as $r) {
                $article = $r->article;
                $couleur = $r->couleur;
                $engagement_total = $r->engagement_total;

                $prete = isset($r->prete_total) ? max(floatval($r->prete_total), 0.05) : 0;

                $data[0]['data'][] = [
                    'x' => $article,
                    'y' => $prete,
                    'fillColor' => $couleur,
                    'goals' => [[

                        'name' => 'Objectif',
                        'value' => $engagement_total,
                        'strokeHeight' => 5,
                        'strokeDashArray' => 5,
                        'strokeColor' => '#775DD0'

                    ]]
                ];

                // Ajouter une annotation pour l'objectif
                if ($prete < $engagement_total) {
                    $annotations[] = [
                        'x' => $article, // Position sur l'axe x (le label de la barre)
                        'y' => $engagement_total, // Position sur l'axe y (valeur de l'objectif)
                        'marker' => [
                            'size' => 0,
                            'fillColor' => '#775DD0',
                        ],
                        'label' => [
                            'text' => "$engagement_total",
                            'style' => [
                                'color' => '#775DD0',
                                'background' => '#fff', // Fond blanc pour être bien visible
                                'fontSize' => '20px',
                                'fontWeight' => 'bold'
                            ],
                            'offsetY' => 0 // Ajuster pour ne pas chevaucher la barre
                        ]
                    ];
                }
            }

            $options = [
                "series" => ["data" => $data],
                "title" => ["text" => "Engagement semaine $semaineNumber - $total_articles produits"],
                //"title" => ["text" => "Engagement semaine $semaineNumber - $total_articles produits (équivalent $total_pondere)"],
                "barWidth" => intVal(100 / count($result)) . "%",
                "annotations" => [
                    "points" => $annotations
                ]
            ];


            $f3->set('HEADER.Content-Type', 'application/json');
            echo json_encode($options, JSON_PRETTY_PRINT);
        } catch (\Exception $e) {
            $f3->error(500, "Erreur lors de la récupération de l'engagement: " . $e->getMessage());
        }
    }

     // Méthode privée pour la première requête
     private function getTotalMachines($semaine)
     {
         $vue_engagement = new \DB\SQL\Mapper($this->db, 'vue_engagement');
         $vue_engagement->total = "SUM(engagement_total)";  // Définit le champ à récupérer
         return $vue_engagement->findOne(['engagement=?', "$semaine"])['total'];
     }
}
